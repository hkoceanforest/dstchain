// Code generated by protoc-gen-gogo. DO NOT EDIT.

package types

import (
	fmt "fmt"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	io "io"
	math "math"
	math_bits "math/bits"
)

var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

const _ = proto.GoGoProtoPackageIsVersion3 

type GenesisState struct {
	
	Params        Params         `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
	RegisterInfos []RegisterInfo `protobuf:"bytes,2,rep,name=register_infos,json=registerInfos,proto3" json:"register_infos" yaml:"register_infos"`
	PhonePrefixes []PhonePrefix  `protobuf:"bytes,3,rep,name=phone_prefixes,json=phonePrefixes,proto3" json:"phone_prefixes" yaml:"phone_prefixes"`
	AddressBooks  []AddressBook  `protobuf:"bytes,4,rep,name=address_books,json=addressBooks,proto3" json:"address_books" yaml:"address_books"`
}

func (m *GenesisState) Reset()         { *m = GenesisState{} }
func (m *GenesisState) String() string { return proto.CompactTextString(m) }
func (*GenesisState) ProtoMessage()    {}
func (*GenesisState) Descriptor() ([]byte, []int) {
	return fileDescriptor_14205810582f3203, []int{0}
}
func (m *GenesisState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GenesisState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GenesisState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GenesisState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenesisState.Merge(m, src)
}
func (m *GenesisState) XXX_Size() int {
	return m.Size()
}
func (m *GenesisState) XXX_DiscardUnknown() {
	xxx_messageInfo_GenesisState.DiscardUnknown(m)
}

var xxx_messageInfo_GenesisState proto.InternalMessageInfo

func (m *GenesisState) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

func (m *GenesisState) GetRegisterInfos() []RegisterInfo {
	if m != nil {
		return m.RegisterInfos
	}
	return nil
}

func (m *GenesisState) GetPhonePrefixes() []PhonePrefix {
	if m != nil {
		return m.PhonePrefixes
	}
	return nil
}

func (m *GenesisState) GetAddressBooks() []AddressBook {
	if m != nil {
		return m.AddressBooks
	}
	return nil
}


type AddressBook struct {
	
	ChatAddress string `protobuf:"bytes,1,opt,name=ChatAddress,proto3" json:"ChatAddress,omitempty" yaml:"chat_address"`
	
	FromAddress string `protobuf:"bytes,2,opt,name=FromAddress,proto3" json:"FromAddress,omitempty" yaml:"from_address"`
}

func (m *AddressBook) Reset()         { *m = AddressBook{} }
func (m *AddressBook) String() string { return proto.CompactTextString(m) }
func (*AddressBook) ProtoMessage()    {}
func (*AddressBook) Descriptor() ([]byte, []int) {
	return fileDescriptor_14205810582f3203, []int{1}
}
func (m *AddressBook) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AddressBook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AddressBook.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AddressBook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressBook.Merge(m, src)
}
func (m *AddressBook) XXX_Size() int {
	return m.Size()
}
func (m *AddressBook) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressBook.DiscardUnknown(m)
}

var xxx_messageInfo_AddressBook proto.InternalMessageInfo

func (m *AddressBook) GetChatAddress() string {
	if m != nil {
		return m.ChatAddress
	}
	return ""
}

func (m *AddressBook) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}


type PhonePrefix struct {
	
	Mobile string `protobuf:"bytes,1,opt,name=Mobile,proto3" json:"Mobile,omitempty" yaml:"mobile"`
	
	Address string `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty" yaml:"address"`
}

func (m *PhonePrefix) Reset()         { *m = PhonePrefix{} }
func (m *PhonePrefix) String() string { return proto.CompactTextString(m) }
func (*PhonePrefix) ProtoMessage()    {}
func (*PhonePrefix) Descriptor() ([]byte, []int) {
	return fileDescriptor_14205810582f3203, []int{2}
}
func (m *PhonePrefix) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhonePrefix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhonePrefix.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhonePrefix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhonePrefix.Merge(m, src)
}
func (m *PhonePrefix) XXX_Size() int {
	return m.Size()
}
func (m *PhonePrefix) XXX_DiscardUnknown() {
	xxx_messageInfo_PhonePrefix.DiscardUnknown(m)
}

var xxx_messageInfo_PhonePrefix proto.InternalMessageInfo

func (m *PhonePrefix) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *PhonePrefix) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}


type RegisterInfo struct {
	
	FromAddress string `protobuf:"bytes,2,opt,name=FromAddress,proto3" json:"FromAddress,omitempty" yaml:"from_address"`
	
	RegisterNodeAddress string `protobuf:"bytes,3,opt,name=RegisterNodeAddress,proto3" json:"RegisterNodeAddress,omitempty" yaml:"register_node_address"`
	
	NodeAddress string `protobuf:"bytes,4,opt,name=NodeAddress,proto3" json:"NodeAddress,omitempty" yaml:"node_address"`
	
	AddressBook string `protobuf:"bytes,5,opt,name=AddressBook,proto3" json:"AddressBook,omitempty" yaml:"address_book"`
	
	ChatBlacklist string `protobuf:"bytes,6,opt,name=ChatBlacklist,proto3" json:"ChatBlacklist,omitempty" yaml:"chat_blacklist"`
	
	ChatWhitelist string `protobuf:"bytes,7,opt,name=ChatWhitelist,proto3" json:"ChatWhitelist,omitempty" yaml:"chat_whitelist"`
	
	Mobile []string `protobuf:"bytes,8,rep,name=Mobile,proto3" json:"Mobile,omitempty" yaml:"mobile"`
	
	UpdateTime int64 `protobuf:"varint,9,opt,name=UpdateTime,proto3" json:"UpdateTime,omitempty" yaml:"update_time"`
	
	ChatBlackEncList string `protobuf:"bytes,10,opt,name=ChatBlackEncList,proto3" json:"ChatBlackEncList,omitempty" yaml:"chat_black_enc_list"`
	
	ChatWhiteEncList string `protobuf:"bytes,11,opt,name=ChatWhiteEncList,proto3" json:"ChatWhiteEncList,omitempty" yaml:"chat_white_enc_list"`
}

func (m *RegisterInfo) Reset()         { *m = RegisterInfo{} }
func (m *RegisterInfo) String() string { return proto.CompactTextString(m) }
func (*RegisterInfo) ProtoMessage()    {}
func (*RegisterInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_14205810582f3203, []int{3}
}
func (m *RegisterInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegisterInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegisterInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RegisterInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterInfo.Merge(m, src)
}
func (m *RegisterInfo) XXX_Size() int {
	return m.Size()
}
func (m *RegisterInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterInfo proto.InternalMessageInfo

func (m *RegisterInfo) GetFromAddress() string {
	if m != nil {
		return m.FromAddress
	}
	return ""
}

func (m *RegisterInfo) GetRegisterNodeAddress() string {
	if m != nil {
		return m.RegisterNodeAddress
	}
	return ""
}

func (m *RegisterInfo) GetNodeAddress() string {
	if m != nil {
		return m.NodeAddress
	}
	return ""
}

func (m *RegisterInfo) GetAddressBook() string {
	if m != nil {
		return m.AddressBook
	}
	return ""
}

func (m *RegisterInfo) GetChatBlacklist() string {
	if m != nil {
		return m.ChatBlacklist
	}
	return ""
}

func (m *RegisterInfo) GetChatWhitelist() string {
	if m != nil {
		return m.ChatWhitelist
	}
	return ""
}

func (m *RegisterInfo) GetMobile() []string {
	if m != nil {
		return m.Mobile
	}
	return nil
}

func (m *RegisterInfo) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *RegisterInfo) GetChatBlackEncList() string {
	if m != nil {
		return m.ChatBlackEncList
	}
	return ""
}

func (m *RegisterInfo) GetChatWhiteEncList() string {
	if m != nil {
		return m.ChatWhiteEncList
	}
	return ""
}

type Params struct {
	
	MaxPhoneNumber uint64 `protobuf:"varint,1,opt,name=max_phone_number,json=maxPhoneNumber,proto3" json:"max_phone_number,omitempty" yaml:"max_phone_number"`
	
	DestroyPhoneNumberCoin types.Coin `protobuf:"bytes,2,opt,name=destroy_phone_number_coin,json=destroyPhoneNumberCoin,proto3" json:"destroy_phone_number_coin" yaml:"destroy_phone_number_coin"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_14205810582f3203, []int{4}
}
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return m.Size()
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetMaxPhoneNumber() uint64 {
	if m != nil {
		return m.MaxPhoneNumber
	}
	return 0
}

func (m *Params) GetDestroyPhoneNumberCoin() types.Coin {
	if m != nil {
		return m.DestroyPhoneNumberCoin
	}
	return types.Coin{}
}

func init() {
	proto.RegisterType((*GenesisState)(nil), "freemasonry.chat.v1.GenesisState")
	proto.RegisterType((*AddressBook)(nil), "freemasonry.chat.v1.AddressBook")
	proto.RegisterType((*PhonePrefix)(nil), "freemasonry.chat.v1.PhonePrefix")
	proto.RegisterType((*RegisterInfo)(nil), "freemasonry.chat.v1.RegisterInfo")
	proto.RegisterType((*Params)(nil), "freemasonry.chat.v1.Params")
}

func init() { proto.RegisterFile("genesis.proto", fileDescriptor_14205810582f3203) }

var fileDescriptor_14205810582f3203 = []byte{
	
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x95, 0x4f, 0x6f, 0xd3, 0x48,
	0x18, 0xc6, 0xe3, 0x26, 0x4d, 0xb7, 0xe3, 0x26, 0xea, 0xba, 0xdd, 0x36, 0xfd, 0xb3, 0x76, 0x76,
	0x0e, 0xab, 0xac, 0xb4, 0xb2, 0xd5, 0x22, 0x21, 0x95, 0x0b, 0xe0, 0xaa, 0x20, 0x10, 0x54, 0x95,
	0x01, 0x21, 0x71, 0xb1, 0xc6, 0xce, 0x24, 0xb1, 0x12, 0xcf, 0x58, 0x9e, 0x69, 0x49, 0x2e, 0x5c,
	0xf8, 0x02, 0xfd, 0x58, 0xbd, 0xd1, 0x23, 0x27, 0x0b, 0xb5, 0xdf, 0xc0, 0x5f, 0x00, 0xe4, 0xb1,
	0xdd, 0xd8, 0x26, 0xf4, 0xc2, 0x2d, 0x9a, 0x79, 0x9e, 0xdf, 0xf3, 0xce, 0xbc, 0xe3, 0x37, 0xa0,
	0x35, 0xc4, 0x04, 0x33, 0x8f, 0xe9, 0x41, 0x48, 0x39, 0x55, 0x36, 0x06, 0x21, 0xc6, 0x3e, 0x62,
	0x94, 0x84, 0x33, 0xdd, 0x1d, 0x21, 0xae, 0x5f, 0x1c, 0xec, 0xee, 0x0f, 0x29, 0x1d, 0x4e, 0xb0,
	0x81, 0x02, 0xcf, 0x40, 0x84, 0x50, 0x8e, 0xb8, 0x47, 0x49, 0x66, 0xd9, 0xdd, 0x1c, 0xd2, 0x21,
	0x15, 0x3f, 0x8d, 0xe4, 0x57, 0xb6, 0xaa, 0xba, 0x94, 0xf9, 0x94, 0x19, 0x0e, 0x62, 0xd8, 0xb8,
	0x38, 0x70, 0x30, 0x47, 0x07, 0x86, 0x4b, 0x3d, 0x92, 0xee, 0xc3, 0xef, 0x4b, 0x60, 0xed, 0x79,
	0x1a, 0xfd, 0x86, 0x23, 0x8e, 0x95, 0x23, 0xd0, 0x0c, 0x50, 0x88, 0x7c, 0xd6, 0x91, 0xba, 0x52,
	0x4f, 0x3e, 0xdc, 0xd3, 0x17, 0x94, 0xa2, 0x9f, 0x09, 0x89, 0xd9, 0xb8, 0x8a, 0xb4, 0x9a, 0x95,
	0x19, 0x94, 0x21, 0x68, 0x87, 0x78, 0xe8, 0x31, 0x8e, 0x43, 0xdb, 0x23, 0x03, 0xca, 0x3a, 0x4b,
	0xdd, 0x7a, 0x4f, 0x3e, 0xfc, 0x67, 0x21, 0xc2, 0xca, 0xa4, 0x2f, 0xc8, 0x80, 0x9a, 0x7f, 0x27,
	0xa0, 0x38, 0xd2, 0xfe, 0x9a, 0x21, 0x7f, 0xf2, 0x08, 0x96, 0x31, 0xd0, 0x6a, 0x85, 0x05, 0x31,
	0x53, 0x06, 0xa0, 0x1d, 0x8c, 0x28, 0xc1, 0x76, 0x10, 0xe2, 0x81, 0x37, 0xc5, 0xac, 0x53, 0x17,
	0x41, 0xdd, 0xc5, 0xb5, 0x26, 0xd2, 0x33, 0xa1, 0xac, 0xe6, 0x94, 0x29, 0xd0, 0x6a, 0x05, 0x73,
	0x2d, 0x66, 0x8a, 0x0b, 0x5a, 0xa8, 0xdf, 0x0f, 0x31, 0x63, 0xb6, 0x43, 0xe9, 0x98, 0x75, 0x1a,
	0xf7, 0xc4, 0x3c, 0x4d, 0x95, 0x26, 0xa5, 0x63, 0x73, 0x3f, 0x8b, 0xd9, 0x4c, 0x63, 0x4a, 0x10,
	0x68, 0xad, 0xa1, 0xb9, 0x94, 0xc1, 0xcf, 0x12, 0x90, 0x0b, 0x5e, 0xe5, 0x08, 0xc8, 0xc7, 0x23,
	0xc4, 0xb3, 0x25, 0xd1, 0x85, 0x55, 0x73, 0x3b, 0x8e, 0xb4, 0x8d, 0x14, 0x96, 0xe4, 0xd9, 0x19,
	0x01, 0x5a, 0x45, 0x6d, 0x62, 0x7d, 0x16, 0x52, 0x3f, 0xb7, 0x2e, 0x55, 0xad, 0x83, 0x90, 0xfa,
	0x05, 0x6b, 0x41, 0x0b, 0x07, 0x40, 0x2e, 0xdc, 0x93, 0xf2, 0x1f, 0x68, 0xbe, 0xa6, 0x8e, 0x37,
	0xc1, 0x59, 0xfe, 0x9f, 0x71, 0xa4, 0xb5, 0x52, 0x88, 0x2f, 0xd6, 0xa1, 0x95, 0x09, 0x94, 0xff,
	0xc1, 0x4a, 0x39, 0x50, 0x89, 0x23, 0xad, 0x5d, 0x3a, 0x38, 0xb4, 0x72, 0x09, 0xbc, 0x5c, 0x06,
	0x6b, 0xc5, 0xce, 0xff, 0x46, 0xcd, 0x8a, 0x05, 0x36, 0x72, 0xd4, 0x29, 0xed, 0xe3, 0x1c, 0x51,
	0x17, 0x88, 0x6e, 0x1c, 0x69, 0xfb, 0x95, 0xd7, 0x44, 0x68, 0x1f, 0xcf, 0x59, 0x8b, 0xcc, 0x49,
	0x39, 0x45, 0x56, 0xa3, 0x5a, 0x4e, 0x19, 0x21, 0x57, 0xac, 0x85, 0x3e, 0x76, 0x96, 0xab, 0xd6,
	0xe2, 0x2b, 0x80, 0x56, 0xa9, 0xe7, 0x8f, 0x41, 0x2b, 0xe9, 0xa3, 0x39, 0x41, 0xee, 0x78, 0xe2,
	0x31, 0xde, 0x69, 0x0a, 0xf3, 0xce, 0xfc, 0xa5, 0x8a, 0xae, 0x3b, 0xf9, 0x3e, 0xb4, 0xca, 0xfa,
	0x1c, 0xf0, 0x7e, 0xe4, 0x71, 0x2c, 0x00, 0x2b, 0x0b, 0x01, 0x1f, 0xf3, 0xfd, 0x0c, 0x70, 0xa7,
	0x2f, 0x34, 0xfc, 0x8f, 0x6e, 0xfd, 0xfe, 0x86, 0x3f, 0x04, 0xe0, 0x5d, 0xd0, 0x47, 0x1c, 0xbf,
	0xf5, 0x7c, 0xdc, 0x59, 0xed, 0x4a, 0xbd, 0xba, 0xb9, 0x15, 0x47, 0x9a, 0x92, 0xca, 0xcf, 0xc5,
	0x9e, 0xcd, 0x3d, 0x1f, 0x43, 0xab, 0xa0, 0x54, 0x5e, 0x82, 0xf5, 0xbb, 0xa2, 0x4f, 0x88, 0xfb,
	0x2a, 0x29, 0x13, 0x88, 0x32, 0xd5, 0x38, 0xd2, 0x76, 0xab, 0xe7, 0xb4, 0x31, 0x71, 0xed, 0xb4,
	0xd6, 0x9f, 0x7c, 0x39, 0x4b, 0xd4, 0x9f, 0xb3, 0xe4, 0x85, 0x2c, 0x71, 0xe4, 0x2a, 0xab, 0xe8,
	0x83, 0x5f, 0x24, 0xd0, 0x4c, 0xe7, 0x99, 0x72, 0x02, 0xd6, 0x7d, 0x34, 0xb5, 0xd3, 0xb1, 0x40,
	0xce, 0x7d, 0x07, 0x87, 0xe2, 0x03, 0x68, 0x98, 0x7b, 0x71, 0xa4, 0x6d, 0x67, 0xf7, 0x51, 0x51,
	0x40, 0xab, 0xed, 0xa3, 0xa9, 0xf8, 0x7a, 0x4e, 0xc5, 0x82, 0xf2, 0x09, 0xec, 0xf4, 0x31, 0xe3,
	0x21, 0x9d, 0x95, 0x84, 0x76, 0x32, 0x77, 0xc5, 0x0b, 0x97, 0x0f, 0x77, 0xf4, 0x74, 0x30, 0xeb,
	0xc9, 0x60, 0xd6, 0xb3, 0xc1, 0xac, 0x1f, 0x53, 0x8f, 0x98, 0xbd, 0x6c, 0x78, 0x74, 0xd3, 0xb8,
	0x5f, 0x92, 0xa0, 0xb5, 0x95, 0xed, 0x15, 0xb2, 0x05, 0xe1, 0xc9, 0xd5, 0x8d, 0x2a, 0x5d, 0xdf,
	0xa8, 0xd2, 0xb7, 0x1b, 0x55, 0xba, 0xbc, 0x55, 0x6b, 0xd7, 0xb7, 0x6a, 0xed, 0xeb, 0xad, 0x5a,
	0xfb, 0xf0, 0x6f, 0x69, 0x72, 0xb9, 0x86, 0x33, 0xa1, 0xee, 0xd8, 0x1d, 0x21, 0x8f, 0x18, 0x53,
	0x23, 0xb9, 0x2f, 0x83, 0xcf, 0x02, 0xcc, 0x9c, 0xa6, 0xf8, 0x77, 0x78, 0xf0, 0x23, 0x00, 0x00,
	0xff, 0xff, 0x0b, 0x30, 0x00, 0xed, 0x97, 0x06, 0x00, 0x00,
}

func (m *GenesisState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GenesisState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GenesisState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.AddressBooks) > 0 {
		for iNdEx := len(m.AddressBooks) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.AddressBooks[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.PhonePrefixes) > 0 {
		for iNdEx := len(m.PhonePrefixes) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PhonePrefixes[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.RegisterInfos) > 0 {
		for iNdEx := len(m.RegisterInfos) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RegisterInfos[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintGenesis(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *AddressBook) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AddressBook) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AddressBook) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.FromAddress) > 0 {
		i -= len(m.FromAddress)
		copy(dAtA[i:], m.FromAddress)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.FromAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ChatAddress) > 0 {
		i -= len(m.ChatAddress)
		copy(dAtA[i:], m.ChatAddress)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.ChatAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PhonePrefix) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhonePrefix) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhonePrefix) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Mobile) > 0 {
		i -= len(m.Mobile)
		copy(dAtA[i:], m.Mobile)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.Mobile)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RegisterInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegisterInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RegisterInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ChatWhiteEncList) > 0 {
		i -= len(m.ChatWhiteEncList)
		copy(dAtA[i:], m.ChatWhiteEncList)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.ChatWhiteEncList)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.ChatBlackEncList) > 0 {
		i -= len(m.ChatBlackEncList)
		copy(dAtA[i:], m.ChatBlackEncList)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.ChatBlackEncList)))
		i--
		dAtA[i] = 0x52
	}
	if m.UpdateTime != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.UpdateTime))
		i--
		dAtA[i] = 0x48
	}
	if len(m.Mobile) > 0 {
		for iNdEx := len(m.Mobile) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Mobile[iNdEx])
			copy(dAtA[i:], m.Mobile[iNdEx])
			i = encodeVarintGenesis(dAtA, i, uint64(len(m.Mobile[iNdEx])))
			i--
			dAtA[i] = 0x42
		}
	}
	if len(m.ChatWhitelist) > 0 {
		i -= len(m.ChatWhitelist)
		copy(dAtA[i:], m.ChatWhitelist)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.ChatWhitelist)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.ChatBlacklist) > 0 {
		i -= len(m.ChatBlacklist)
		copy(dAtA[i:], m.ChatBlacklist)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.ChatBlacklist)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.AddressBook) > 0 {
		i -= len(m.AddressBook)
		copy(dAtA[i:], m.AddressBook)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.AddressBook)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.NodeAddress) > 0 {
		i -= len(m.NodeAddress)
		copy(dAtA[i:], m.NodeAddress)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.NodeAddress)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RegisterNodeAddress) > 0 {
		i -= len(m.RegisterNodeAddress)
		copy(dAtA[i:], m.RegisterNodeAddress)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.RegisterNodeAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.FromAddress) > 0 {
		i -= len(m.FromAddress)
		copy(dAtA[i:], m.FromAddress)
		i = encodeVarintGenesis(dAtA, i, uint64(len(m.FromAddress)))
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}

func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.DestroyPhoneNumberCoin.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintGenesis(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if m.MaxPhoneNumber != 0 {
		i = encodeVarintGenesis(dAtA, i, uint64(m.MaxPhoneNumber))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintGenesis(dAtA []byte, offset int, v uint64) int {
	offset -= sovGenesis(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GenesisState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Params.Size()
	n += 1 + l + sovGenesis(uint64(l))
	if len(m.RegisterInfos) > 0 {
		for _, e := range m.RegisterInfos {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.PhonePrefixes) > 0 {
		for _, e := range m.PhonePrefixes {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if len(m.AddressBooks) > 0 {
		for _, e := range m.AddressBooks {
			l = e.Size()
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	return n
}

func (m *AddressBook) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChatAddress)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.FromAddress)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	return n
}

func (m *PhonePrefix) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Mobile)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	return n
}

func (m *RegisterInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.FromAddress)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.RegisterNodeAddress)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.NodeAddress)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.AddressBook)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.ChatBlacklist)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.ChatWhitelist)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	if len(m.Mobile) > 0 {
		for _, s := range m.Mobile {
			l = len(s)
			n += 1 + l + sovGenesis(uint64(l))
		}
	}
	if m.UpdateTime != 0 {
		n += 1 + sovGenesis(uint64(m.UpdateTime))
	}
	l = len(m.ChatBlackEncList)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	l = len(m.ChatWhiteEncList)
	if l > 0 {
		n += 1 + l + sovGenesis(uint64(l))
	}
	return n
}

func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.MaxPhoneNumber != 0 {
		n += 1 + sovGenesis(uint64(m.MaxPhoneNumber))
	}
	l = m.DestroyPhoneNumberCoin.Size()
	n += 1 + l + sovGenesis(uint64(l))
	return n
}

func sovGenesis(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozGenesis(x uint64) (n int) {
	return sovGenesis(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GenesisState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GenesisState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GenesisState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegisterInfos", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RegisterInfos = append(m.RegisterInfos, RegisterInfo{})
			if err := m.RegisterInfos[len(m.RegisterInfos)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PhonePrefixes", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PhonePrefixes = append(m.PhonePrefixes, PhonePrefix{})
			if err := m.PhonePrefixes[len(m.PhonePrefixes)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressBooks", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddressBooks = append(m.AddressBooks, AddressBook{})
			if err := m.AddressBooks[len(m.AddressBooks)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AddressBook) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AddressBook: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AddressBook: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhonePrefix) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhonePrefix: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhonePrefix: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegisterInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegisterInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegisterInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FromAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FromAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegisterNodeAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RegisterNodeAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NodeAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NodeAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AddressBook", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AddressBook = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatBlacklist", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatBlacklist = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatWhitelist", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatWhitelist = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobile = append(m.Mobile, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateTime", wireType)
			}
			m.UpdateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdateTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatBlackEncList", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatBlackEncList = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatWhiteEncList", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatWhiteEncList = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxPhoneNumber", wireType)
			}
			m.MaxPhoneNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxPhoneNumber |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DestroyPhoneNumberCoin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthGenesis
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthGenesis
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.DestroyPhoneNumberCoin.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipGenesis(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthGenesis
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipGenesis(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowGenesis
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowGenesis
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthGenesis
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupGenesis
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthGenesis
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthGenesis        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowGenesis          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupGenesis = fmt.Errorf("proto: unexpected end of group")
)
